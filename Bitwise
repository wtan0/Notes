set bit i: n |= 1 << i;
unset bit i: n &= ~(1 << i);
toggle bit i: n ^= 1 << i;
test bit i is 1: isOne = (n >> i) & 1 == 1;
test bit i is 0: isZero = (n >> i) & 1 == 0;
is 2^n ?: isPower = (n & (n- 1)) == 0;
keep only the 1st bit of 1: n - (n & (n - 1));
